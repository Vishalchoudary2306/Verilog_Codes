module clk_divider(clk,clk_out);
input clk;
output reg clk_out;
reg [2:0] count=3'b000;
initial
begin
count=0;
clk_out=0;
end
always @(posedge clk) begin
if (count == 4) begin
count <= 0;
clk_out <= ~clk_out;
end else begin
count <= count + 1;
end
end
endmodule

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TESTBENCH
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
module clk_divider_tb();
reg clk;
wire clk_out;
clk_divider dut(clk,clk_out);
initial
begin
clk=0;
forever#5 clk=~clk;
end

endmodule
